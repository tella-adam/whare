datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id             String     @id @default(cuid())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  email          String     @unique
  password       String
  firstname      String?
  lastname       String?
  posts          Post[]
  role           Role
  memberType     MemberType @default(PARENT)
  tasksCreated   Task[]     @relation("tasksCreated")
  tasksAssigned  Task[]     @relation("tasksAssigned")
  family         Family?    @relation(fields: [familyId], references: [id])
  familyId       String?
  choresCreated  Chore[]    @relation("choresCreated")
  choresAssigned Chore[]    @relation("choresAssigned")
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Task {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  name         String
  done         Boolean  @default(false)
  description  String?
  createdBy    User?    @relation("tasksCreated", fields: [createdById], references: [id])
  createdById  String?
  assignedTo   User?    @relation("tasksAssigned", fields: [assignedToId], references: [id])
  assignedToId String?
}

model Chore {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  name         String
  done         Boolean  @default(false)
  description  String?
  reward       String?
  createdBy    User?    @relation("choresCreated", fields: [createdById], references: [id])
  createdById  String?
  assignedTo   User?    @relation("choresAssigned", fields: [assignedToId], references: [id])
  assignedToId String?
}

model Family {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  members   User[]
}

enum MemberType {
  PARENT
  CHILD
}

enum Role {
  ADMIN
  USER
}
